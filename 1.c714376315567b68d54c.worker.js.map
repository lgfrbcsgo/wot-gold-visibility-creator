{"version":3,"sources":["webpack:///./src/worker/wasm/pkg/gold_visibility_creator_wasm.js"],"names":["__webpack_require__","r","__webpack_exports__","d","__wbg_red_8dd691710d0e658a","__wbg_green_7f75db321ce6b7d7","__wbg_blue_5583a7d18bf501cb","__wbg_alpha_2aa0d5b87dd9b4a7","__wbg_data_afbd442cdc470da7","__wbg_height_a6c3295fdea676bd","__wbg_width_a54a8b6265ffb03b","create","__wbg_error_4bb6c2a97407129a","__wbg_new_59cb74e423758ede","__wbg_stack_558ba5917b466edd","__wbindgen_throw","__wbindgen_object_drop_ref","_gold_visibility_creator_wasm_bg__WEBPACK_IMPORTED_MODULE_0__","heap","Array","getObject","idx","arg0","red","green","blue","alpha","fill","undefined","push","cachegetUint8Memory","getUint8Memory","buffer","wasm","Uint8Array","WASM_VECTOR_LEN","cachegetUint32Memory","getUint32Memory","Uint32Array","ret","retptr","arg","ptr","length","set","passArray8ToWasm","data","retlen","mem","height","width","heap_next","addHeapObject","obj","cachedGlobalArgumentPtr","image_data","color","rustptr","rustlen","realRet","len","subarray","slice","cachedTextDecoder","TextDecoder","getStringFromWasm","decode","arg1","varg0","console","error","Error","passStringToWasm","cachedTextEncoder","TextEncoder","stack","i","encodeInto","size","writeOffset","view","read","written","substring","buf","encode"],"mappings":"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","file":"1.c714376315567b68d54c.worker.js","sourcesContent":["import * as wasm from './gold_visibility_creator_wasm_bg';\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nexport function __wbg_red_8dd691710d0e658a(arg0) {\n    return getObject(arg0).red;\n}\n\nexport function __wbg_green_7f75db321ce6b7d7(arg0) {\n    return getObject(arg0).green;\n}\n\nexport function __wbg_blue_5583a7d18bf501cb(arg0) {\n    return getObject(arg0).blue;\n}\n\nexport function __wbg_alpha_2aa0d5b87dd9b4a7(arg0) {\n    return getObject(arg0).alpha;\n}\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm(arg) {\n    const ptr = wasm.__wbindgen_malloc(arg.length * 1);\n    getUint8Memory().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nexport function __wbg_data_afbd442cdc470da7(ret, arg0) {\n\n    const retptr = passArray8ToWasm(getObject(arg0).data);\n    const retlen = WASM_VECTOR_LEN;\n    const mem = getUint32Memory();\n    mem[ret / 4] = retptr;\n    mem[ret / 4 + 1] = retlen;\n\n}\n\nexport function __wbg_height_a6c3295fdea676bd(arg0) {\n    return getObject(arg0).height;\n}\n\nexport function __wbg_width_a54a8b6265ffb03b(arg0) {\n    return getObject(arg0).width;\n}\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getArrayU8FromWasm(ptr, len) {\n    return getUint8Memory().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null) {\n        cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n    }\n    return cachedGlobalArgumentPtr;\n}\n/**\n* @param {any} image_data\n* @param {any} color\n* @returns {Uint8Array}\n*/\nexport function create(image_data, color) {\n    const retptr = globalArgumentPtr();\n    wasm.create(retptr, addHeapObject(image_data), addHeapObject(color));\n    const mem = getUint32Memory();\n    const rustptr = mem[retptr / 4];\n    const rustlen = mem[retptr / 4 + 1];\n\n    const realRet = getArrayU8FromWasm(rustptr, rustlen).slice();\n    wasm.__wbindgen_free(rustptr, rustlen * 1);\n    return realRet;\n\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nexport function __wbg_error_4bb6c2a97407129a(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n\n    varg0 = varg0.slice();\n    wasm.__wbindgen_free(arg0, arg1 * 1);\n\n    console.error(varg0);\n}\n\nexport function __wbg_new_59cb74e423758ede() {\n    return addHeapObject(new Error());\n}\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet passStringToWasm;\nif (typeof cachedTextEncoder.encodeInto === 'function') {\n    passStringToWasm = function(arg) {\n\n        let size = arg.length;\n        let ptr = wasm.__wbindgen_malloc(size);\n        let writeOffset = 0;\n        while (true) {\n            const view = getUint8Memory().subarray(ptr + writeOffset, ptr + size);\n            const { read, written } = cachedTextEncoder.encodeInto(arg, view);\n            writeOffset += written;\n            if (read === arg.length) {\n                break;\n            }\n            arg = arg.substring(read);\n            ptr = wasm.__wbindgen_realloc(ptr, size, size += arg.length * 3);\n        }\n        WASM_VECTOR_LEN = writeOffset;\n        return ptr;\n    };\n} else {\n    passStringToWasm = function(arg) {\n\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = wasm.__wbindgen_malloc(buf.length);\n        getUint8Memory().set(buf, ptr);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    };\n}\n\nexport function __wbg_stack_558ba5917b466edd(ret, arg0) {\n\n    const retptr = passStringToWasm(getObject(arg0).stack);\n    const retlen = WASM_VECTOR_LEN;\n    const mem = getUint32Memory();\n    mem[ret / 4] = retptr;\n    mem[ret / 4 + 1] = retlen;\n\n}\n\nexport function __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nexport function __wbindgen_object_drop_ref(i) { dropObject(i); }\n\n"],"sourceRoot":""}